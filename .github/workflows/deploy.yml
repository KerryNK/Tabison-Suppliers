name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-backend:
    needs: security-checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: ${{ secrets.MONGODB_TEST_URI }}
          JWT_SECRET: ${{ secrets.JWT_TEST_SECRET }}
          EMAIL_USER: ${{ secrets.SMTP_TEST_USER }}
          EMAIL_PASS: ${{ secrets.SMTP_TEST_PASSWORD }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_TEST_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_TEST_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_TEST_SECRET }}

      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          VITE_API_URL: ${{ secrets.TEST_API_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.TEST_GOOGLE_CLIENT_ID }}

      - name: Build
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.PROD_API_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.PROD_GOOGLE_CLIENT_ID }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'
